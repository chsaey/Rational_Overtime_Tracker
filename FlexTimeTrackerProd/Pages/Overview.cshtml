@page
@model FlexTimeTrackerProd.OverviewModel
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@{
    ViewData["Title"] = "Index";

    var user = await UserManager.GetUserAsync(User);
    
    var add = Newtonsoft.Json.JsonConvert.SerializeObject(Model.AddEntry);
    var use = Newtonsoft.Json.JsonConvert.SerializeObject(Model.UseEntry);


}
<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8">

        <div class="pre-scrollable" style="max-height: 75vh">


            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Username
                        </th>
                        <th>
                            Hours
                        </th>
                        <th>
                            Shift
                        </th>
                        <th>Logs</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.UserMinutes)
                    {
                        var currentUser = await UserManager.FindByIdAsync(item.ApplicationUserID);

                        if (user.Shift == "Global")
                        {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => currentUser.UserName)
                        </td>
                        <td>
                            @Html.Raw(item.Minutes / 60) Hour(s) @Html.Raw(item.Minutes % 60) Minute(s)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => currentUser.Shift)
                        </td>
                        <td>
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#entryModal" data-addentries="@add" data-useentries="@use" data-id="@currentUser.Id" data-username="@currentUser.UserName">View Entries</button>
                        </td>
                    </tr>
                        }

                        else if (user.Shift == currentUser.Shift)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => currentUser.UserName)
                                </td>
                                <td>
                                    @Html.Raw(item.Minutes / 60) Hour(s) @Html.Raw(item.Minutes % 60) Minute(s)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => currentUser.Shift)
                                </td>
                                <td>
                                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#entryModal" data-addentries="@add" data-useentries="@use" data-id="@currentUser.Id" data-username="@currentUser.UserName">View Entries</button>
                                </td>

                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>

    </div>

</div>


<div class="modal fade" id="entryModal" tabindex="-1" role="dialog" aria-labelledby="entryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="col-sm-6 modal-title" id="entryModalLabel">Add Entries</h5>
                <h5 class="col-sm-5 modal-title" id="entryModalLabel">Use Entries</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="model-body">
                <div class="pre-scrollable" style="max-height: 75vh">
                    <div class="row">
                        <div class="col-sm-6">
                           
                            <table class="table" id="AddEntryTable">
                                <thead>
                                    <tr>
                                        <th>
                                            Date
                                        </th>
                                        <th>
                                            Minutes
                                        </th>
                                        <th>
                                            Notes
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-sm-6">
                            <table class="table" id="UseEntryTable">
                                <thead>
                                    <tr>
                                        <th>
                                            Date
                                        </th>
                                        <th>
                                            Minutes
                                        </th>
                                        <th>
                                            Notes
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $('#entryModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var add = button.data('addentries') // Extract info from data-* attributes
        var use = button.data('useentries') // Extract info from data-* attributes
        var ID = button.data('id');
       
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
        

        $.each((add), function (index, value) {            
            if (value["UserID"] == ID) {
                var date = value["Date"].split("T")[0];
                console.log(date);
                var newRowContent = "<tr><td>" + date + "</td> <td>" + value["Minutes"] + "</td> <td>" + value["Notes"] + "</tr>";
                $("#entryModal #AddEntryTable tbody ").append(newRowContent);
            }
        });

           $.each((use), function (index, value) {            
            if (value["UserID"] == ID) {
                var date = value["Date"].split("T")[0];
                var newRowContent = "<tr><td>" + date + "</td> <td>" + value["Minutes"] + "</td> <td>" + value["Notes"] + "</tr>";
                $("#entryModal #UseEntryTable tbody ").append(newRowContent);
            }
        });

        $('#entryModal').on('hidden.bs.modal', function () {

            $("#entryModal #AddEntryTable tbody ").html("");
            $("#entryModal #UseEntryTable tbody ").html("");

        });



    })</script>