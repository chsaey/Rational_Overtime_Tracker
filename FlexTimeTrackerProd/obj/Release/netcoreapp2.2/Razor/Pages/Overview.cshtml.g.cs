#pragma checksum "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7c12e64317f2378588b8f4d0d631a4aa5868be79"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(FlexTimeTrackerProd.Pages.Pages_Overview), @"mvc.1.0.razor-page", @"/Pages/Overview.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Overview.cshtml", typeof(FlexTimeTrackerProd.Pages.Pages_Overview), null)]
namespace FlexTimeTrackerProd.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 2 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\_ViewImports.cshtml"
using FlexTimeTrackerProd;

#line default
#line hidden
#line 3 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\_ViewImports.cshtml"
using FlexTimeTrackerProd.Data;

#line default
#line hidden
#line 3 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7c12e64317f2378588b8f4d0d631a4aa5868be79", @"/Pages/Overview.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"890244fa0441bc9d21c9059b4bd972f3a90dbb34", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Overview : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(87, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(193, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
#line 9 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
  
    ViewData["Title"] = "Index";

    var user = await UserManager.GetUserAsync(User);
    
    var add = Newtonsoft.Json.JsonConvert.SerializeObject(Model.AddEntry);
    var use = Newtonsoft.Json.JsonConvert.SerializeObject(Model.UseEntry);



#line default
#line hidden
            BeginContext(456, 644, true);
            WriteLiteral(@"<div class=""row"">
    <div class=""col-md-2""></div>
    <div class=""col-md-8"">

        <div class=""pre-scrollable"" style=""max-height: 75vh"">


            <table class=""table"">
                <thead>
                    <tr>
                        <th>
                            Username
                        </th>
                        <th>
                            Hours
                        </th>
                        <th>
                            Shift
                        </th>
                        <th>Logs</th>
                    </tr>
                </thead>
                <tbody>
");
            EndContext();
#line 42 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                     foreach (var item in Model.UserMinutes)
                    {
                        var currentUser = await UserManager.FindByIdAsync(item.ApplicationUserID);

                        if (user.Shift == "Global")
                        {

#line default
#line hidden
            BeginContext(1367, 84, true);
            WriteLiteral("                    <tr>\r\n                        <td>\r\n                            ");
            EndContext();
            BeginContext(1452, 50, false);
#line 50 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                       Write(Html.DisplayFor(modelItem => currentUser.UserName));

#line default
#line hidden
            EndContext();
            BeginContext(1502, 91, true);
            WriteLiteral("\r\n                        </td>\r\n                        <td>\r\n                            ");
            EndContext();
            BeginContext(1594, 27, false);
#line 53 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                       Write(Html.Raw(item.Minutes / 60));

#line default
#line hidden
            EndContext();
            BeginContext(1621, 9, true);
            WriteLiteral(" Hour(s) ");
            EndContext();
            BeginContext(1631, 27, false);
#line 53 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                                                            Write(Html.Raw(item.Minutes % 60));

#line default
#line hidden
            EndContext();
            BeginContext(1658, 101, true);
            WriteLiteral(" Minute(s)\r\n                        </td>\r\n                        <td>\r\n                            ");
            EndContext();
            BeginContext(1760, 47, false);
#line 56 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                       Write(Html.DisplayFor(modelItem => currentUser.Shift));

#line default
#line hidden
            EndContext();
            BeginContext(1807, 200, true);
            WriteLiteral("\r\n                        </td>\r\n                        <td>\r\n                            <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#entryModal\" data-addentries=\"");
            EndContext();
            BeginContext(2008, 3, false);
#line 59 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                                                                                                                                    Write(add);

#line default
#line hidden
            EndContext();
            BeginContext(2011, 19, true);
            WriteLiteral("\" data-useentries=\"");
            EndContext();
            BeginContext(2031, 3, false);
#line 59 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                                                                                                                                                           Write(use);

#line default
#line hidden
            EndContext();
            BeginContext(2034, 11, true);
            WriteLiteral("\" data-id=\"");
            EndContext();
            BeginContext(2046, 14, false);
#line 59 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                                                                                                                                                                          Write(currentUser.Id);

#line default
#line hidden
            EndContext();
            BeginContext(2060, 17, true);
            WriteLiteral("\" data-username=\"");
            EndContext();
            BeginContext(2078, 20, false);
#line 59 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                                                                                                                                                                                                          Write(currentUser.UserName);

#line default
#line hidden
            EndContext();
            BeginContext(2098, 83, true);
            WriteLiteral("\">View Entries</button>\r\n                        </td>\r\n                    </tr>\r\n");
            EndContext();
#line 62 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                        }

                        else if (user.Shift == currentUser.Shift)
                        {

#line default
#line hidden
            BeginContext(2304, 108, true);
            WriteLiteral("                            <tr>\r\n                                <td>\r\n                                    ");
            EndContext();
            BeginContext(2413, 50, false);
#line 68 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                               Write(Html.DisplayFor(modelItem => currentUser.UserName));

#line default
#line hidden
            EndContext();
            BeginContext(2463, 115, true);
            WriteLiteral("\r\n                                </td>\r\n                                <td>\r\n                                    ");
            EndContext();
            BeginContext(2579, 27, false);
#line 71 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                               Write(Html.Raw(item.Minutes / 60));

#line default
#line hidden
            EndContext();
            BeginContext(2606, 9, true);
            WriteLiteral(" Hour(s) ");
            EndContext();
            BeginContext(2616, 27, false);
#line 71 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                                                                    Write(Html.Raw(item.Minutes % 60));

#line default
#line hidden
            EndContext();
            BeginContext(2643, 125, true);
            WriteLiteral(" Minute(s)\r\n                                </td>\r\n                                <td>\r\n                                    ");
            EndContext();
            BeginContext(2769, 47, false);
#line 74 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                               Write(Html.DisplayFor(modelItem => currentUser.Shift));

#line default
#line hidden
            EndContext();
            BeginContext(2816, 224, true);
            WriteLiteral("\r\n                                </td>\r\n                                <td>\r\n                                    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#entryModal\" data-addentries=\"");
            EndContext();
            BeginContext(3041, 3, false);
#line 77 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                                                                                                                                            Write(add);

#line default
#line hidden
            EndContext();
            BeginContext(3044, 19, true);
            WriteLiteral("\" data-useentries=\"");
            EndContext();
            BeginContext(3064, 3, false);
#line 77 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                                                                                                                                                                   Write(use);

#line default
#line hidden
            EndContext();
            BeginContext(3067, 11, true);
            WriteLiteral("\" data-id=\"");
            EndContext();
            BeginContext(3079, 14, false);
#line 77 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                                                                                                                                                                                  Write(currentUser.Id);

#line default
#line hidden
            EndContext();
            BeginContext(3093, 17, true);
            WriteLiteral("\" data-username=\"");
            EndContext();
            BeginContext(3111, 20, false);
#line 77 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                                                                                                                                                                                                                  Write(currentUser.UserName);

#line default
#line hidden
            EndContext();
            BeginContext(3131, 101, true);
            WriteLiteral("\">View Entries</button>\r\n                                </td>\r\n\r\n                            </tr>\r\n");
            EndContext();
#line 81 "C:\Users\saech\Desktop\main\FlexTimeTrackerProd\Pages\Overview.cshtml"
                        }
                    }

#line default
#line hidden
            BeginContext(3282, 4469, true);
            WriteLiteral(@"                </tbody>
            </table>
        </div>

    </div>

</div>


<div class=""modal fade"" id=""entryModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""entryModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""col-sm-6 modal-title"" id=""entryModalLabel"">Add Entries</h5>
                <h5 class=""col-sm-5 modal-title"" id=""entryModalLabel"">Use Entries</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""model-body"">
                <div class=""pre-scrollable"" style=""max-height: 75vh"">
                    <div class=""row"">
                        <div class=""col-sm-6"">
                           
                            <table class=""table"" id=""AddEntryTable"">
  ");
            WriteLiteral(@"                              <thead>
                                    <tr>
                                        <th>
                                            Date
                                        </th>
                                        <th>
                                            Minutes
                                        </th>
                                        <th>
                                            Notes
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                        <div class=""col-sm-6"">
                            <table class=""table"" id=""UseEntryTable"">
                                <thead>
                                    <tr>
                                        <th>
                         ");
            WriteLiteral(@"                   Date
                                        </th>
                                        <th>
                                            Minutes
                                        </th>
                                        <th>
                                            Notes
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $('#entryModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var add = button.data('addentries') // Extract info from data-* attributes
        var use = button.data('useentries') // Extract info from data-* attri");
            WriteLiteral(@"butes
        var ID = button.data('id');
       
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
        

        $.each((add), function (index, value) {            
            if (value[""UserID""] == ID) {
                var date = value[""Date""].split(""T"")[0];
                console.log(date);
                var newRowContent = ""<tr><td>"" + date + ""</td> <td>"" + value[""Minutes""] + ""</td> <td>"" + value[""Notes""] + ""</tr>"";
                $(""#entryModal #AddEntryTable tbody "").append(newRowContent);
            }
        });

           $.each((use), function (index, value) {            
            if (value[""UserID""] == ID) {
                var date = value[""Date""].split(""T"")[0];
                var newRowContent = ""<tr><td>"" + date + ""</td> <td>"" + value[""Minutes""] + ""<");
            WriteLiteral(@"/td> <td>"" + value[""Notes""] + ""</tr>"";
                $(""#entryModal #UseEntryTable tbody "").append(newRowContent);
            }
        });

        $('#entryModal').on('hidden.bs.modal', function () {

            $(""#entryModal #AddEntryTable tbody "").html("""");
            $(""#entryModal #UseEntryTable tbody "").html("""");

        });



    })</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<ApplicationUser> UserManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SignInManager<ApplicationUser> SignInManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<FlexTimeTrackerProd.OverviewModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<FlexTimeTrackerProd.OverviewModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<FlexTimeTrackerProd.OverviewModel>)PageContext?.ViewData;
        public FlexTimeTrackerProd.OverviewModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
